gtpj() {
    cd $(ls -d $HOME/projects/* | grep "$1")
}

lpj(){
    ls -al $HOME/projects
}

cpj(){
    if [ -z "$1" ]
    then
        echo "Se require nombre de projecto"
    else
        cd $HOME/projects
        mkdir "$1"
    fi
}

sapp(){
    if [ -z "$1" ]
    then
        echo "Se require nombre de projecto"
    else
        gtpj "$1"
        if [ -f app.js ]; then
            nodemon app.js
        fi
    fi
}

ecmd() {
    vim $HOME/.bashfiles/personaCommands
}

reload(){
    source $HOME/.bash_profile
}

runApp(){
    NODE_ENV='development' $(pwd)/node_modules/electron/dist/electron .
}

clearDocker(){
  bash $HOME/.bashfiles/cleanDocker.sh
}

compileImage(){
  docker build --rm --tag $(basename `pwd`) .
}

runDockerApp(){
  docker run -it -p 8081:80 $(basename `pwd`)
}

deployProduction(){
  gcloud app deploy app_production.yaml
}

initRailsProject(){
  RAILSPATH=$PWD
  cd $HOME/projects/dockerImages/rails
  sed -i '.original' -e "s~RAILSPATH~${RAILSPATH}~g" docker-compose.yml
  rm -rf docker-compose.yml.original
  docker-compose build
  cd $RAILSPATH
}

runRailsProject(){
  RAILSPATH=$PWD
  APPNAME=$(basename $RAILSPATH)
  cd $HOME/projects/dockerImages/rails
  sed -i '.original' -e "s~APPNAME~${APPNAME}~g" docker-compose.yml
  rm -rf docker-compose.yml.original
  docker-compose up -d
  docker attach $APPNAME
  cd $RAILSPATH
}

runRailsC(){
  APPNAME=$(basename `pwd`)
  if [ -z "$1" ]
  then
    docker exec -it $APPNAME bin/rails c
  else
    docker exec -it $APPNAME bin/rails c "$1"
  fi
}

runRake(){
  APPNAME=$(basename `pwd`)
  docker exec -it $APPNAME bundle exec rake "$1"
}
